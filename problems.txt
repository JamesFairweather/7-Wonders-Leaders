
Added by James Fairweather
UI problems:
  - UI is too crowded.  Change it to be a scrollable horizontal panel with one player state in each panel that's much larger.  Should be large enough to show complete state of plus both neighbors.
  - Can we use other nicknames?
  - it would be nice if PlayerStatePanels were created dynamically so we maximized our use of space on the Main Window.
    The current behavior is that all 8 panels are created statically and only the ones in use are activated.
  - Conflict tokens and losses could be presented using icons instead of text labels, put them on the wonder boards.
  - I need to create an end-of-game UI window.

Commerce issues:
	- I am not sure that the either/or first age cards are working correctly.  I need to do a detailed analysis of how the resources are walked.  The algorithm should look like:
		* if the card cost is zero, or the parent was built, the card can be built for free
		* if not, check the resources of the player.  Starting with the singles or doubles, then the either/or, then the forum/caravansery, the Leader who give a resource-1 cost for that card type.
		* if still not, commerce is required.  Combine the players plus the two neighbor's resources into one list.
		  as with the single player, go through the singles, doubles, either/or cards, caravansery/forum, then bilkis.  The either/or cards are the most challenging
		  as every possible combination must be checked before the cost is said to be impossible.  I.e. using the first resource of an either/or might make it not possible
		  to afford it but choosing the other one could mean the structure _is_ affordable.  So every possible combination must be checked before the isCardAffordable returns
		  false, and I don't think it's checking every possible combination.
	- Submit data from client should look like: BldStrct&Structure=<Card Name>&CommerceData=true&Player=W/Clay Pit&Player=S/Quarry&Player=S/Quarry&Left=W/Tree Farm&Right=G/Glassworks
		- Commerce Data is only required for structures that require it.
		- The card name can be WonderStagen, n { 1, 2, 3, 4 }
	- We're currently using the effects, which in some ways is better (simpler), but the real weakness is that the client just sends back "build this structure and pay my left neighbor 1 coin and my right one 3 coins"
	  If I want to be serious about this, that's not an appropriate response.  Client must include which cards were used so the server can validate the transaction.  Still, I suppose you could just pass back which
	  resources were used on either side rather than a few coins.  It would still be fairly easy to calculate what's going on.

AI players
	- Could be improved a lot without much effort
	- Take advantage of commerce ability
	- Don't overplay military
	- Go for sets in science
	- Take advantage of Wonder effects.
	- Look at what other cards have been played to guess what's coming in the next hand.

Technical stories:

- There may still be a bug if both Babylon and Halikarnassos build their extra card on the same turn. 

- Tested Wonders: Alexandria (both sides), Babylon (both sides), Ephesos (both sides)

- The list of players (the datagrid) isn't hooked up at the match-making.

- Need to check all the wonders' special abilities.  Alexandria A's is working properly.

- The protocol for the client/server communication is quite a lot more verbose than it needs to be.  Surely the server should wait for each client to make his choice, then broadcast the card each player played to every
  other player.  Instead, it sends the whole game state to every player after each turn.
	- stil working on this.

- it would be nice to use data binding, if I can figure it out.

- the game doesn't terminate nicely when it's shut down.  Must kill it.

Original text below:

MainWindow constructor

- create Coordinator
- load GUI

showPlayerBarPanel(String playerBarPanelInformation)

push this!